/*
Colors used

Text Color (Dark Gray): #2b2b2b;
Primary Color (Purple): #357b70;
Secondary Color (Orange): #e0b354;
Link Visted Color: #05676e;
Link Active Color: #489c79;

 */
:root {
   --primary-color: #357b70;
   --secondary-color: #e0b354;
   --dark-grey: #2b2b2b; 
   --link-active: #05676e;
   --link-visted: #489c79;
   --grid-color: lightblue;
   --button-text: white; 
   --sun1: #edc655;
   --sun2: #fcffad;
   --sun3: #f76414;
   --header-weight: 700;
}
a {
   color: var(--primary-color)
}
 body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    /*sets the font size to 16px */
    line-height: 1.6;
    /*sets lineheight to 1.6 */
 }

 h1 {
    font-size: 30px;
    font-weight: var(--header-weight);
 }

 h2 {
    font-size: 24px;
    font-weight: var(--header-weight);
 }

 h3 {
    font-size: 18px;
    font-weight: var(--header-weight);
 }

 a {
    color: var(--primary-color);
 }

 a:visited {
    /*visted link*/
    color: var(--link-visted)
 }

 a:hover, a:focus {
    /* No underlining when hovering over a link */
    text-decoration: none;
 }

 a:active {
    /* selected link */
    color: var(--link-active);
 }


 
 button:hover, button:focus {
    /* lets the mouse appear as a hand when hovering over the button */
    cursor: pointer;
    /* reduces the opacity of the button to 80% */
    opacity: 0.8;
 }

 .button__secondary {
    background-color: var(--secondary-color);
    color: var(--dark-grey)
 }

 .navigation-list__item--active {
    text-decoration: none;
 }

.profile_portrait {
   float: left;
   width: 250px;
   height: auto;
   margin-right: 40px;
   border-radius: 50%;
}

.index-footer {
   clear: both;
   display: flex;
   flex-direction: column;
   text-align: center;
}

.profile {
   max-width: 700px;
   margin: 0 auto;
}

* {
   box-sizing: border-box;
}

.page-header {
   display: flex;
   width: 100%;
   padding: 20px;
}

.page-header__item {
   flex: 0 1 200px;
}
.page-header__item:last-child {
   flex-grow: 1;
   text-align: right;
}

.navigation-list {
   list-style-type: none;
}

.navigation-list li {
   display: inline-block;
   margin-left: 15px;
}

.about-list {
   list-style-type: none;
}

/* .grid__item {
   display: inline-block;
   width: 33%;
} */

@supports (display: grid) {
.grid {
   display: grid;
   grid-template-columns: 1fr 1fr 1fr;
   grid-gap: 20px;
}

.grid__item {
   background-color: var(--grid-color);
   width: auto;
   min-height: auto;
   margin: 0;
   padding: 30px;
}

.grid__item:last-child {
   grid-column: 3 / 3;
   grid-row: 1 / 3;
}
}

@media all and (max-width: 500px) {
   .grid {
     grid-template-columns: 1fr;
   }
 }
 @media all and (min-width: 500px) and (max-width: 750px){
   .grid {
     grid-template-columns: 1fr 1fr;
   }
 }
 @media all and (max-width: 750px) {
   .grid {
     grid-gap: 10px;
   }
   .grid__item:last-child {
     grid-column: auto / auto;
     grid-row: auto / auto;
   }
   h1 {
     font-size: 22px;
   }
 }

button, .button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the button */
  background-color: var(--primary-color);
  color: var(--button-text);
  text-decoration: none;
  padding: 10px;
  border-radius: 3px;
  /* width of the border, type, color */
  border-bottom: 2px solid var(--dark-grey);
  transition: opacity 0.2s;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

@keyframes color-change {
   0% {
     fill: var(--sun1);
   }
   50% {
     fill: var(--sun2);
   }
   100% {
     fill: var(--sun3);
   }
 }
 
 .sun {
   animation-duration: 4s;
   animation-name: color-change;
   animation-iteration-count: infinite;
   animation-direction: alternate;
   animation-timing-function: linear;
 }

 /*  same as .sun but will only trigger animation when hovering over the sun svg
   .sun:hover {
   animation-duration: 4s;
   animation-name: color-change;
   animation-iteration-count: infinite;
   animation-direction: alternate;
   animation-timing-function: linear;
 } 
 */

 /* 
 Same .sun above but condensed
 .sun {
   animation: 4s color-change infinite alternate liniear;
 }
 */

 @keyframes cloud-move {
   from {
      transform: translate(0px, 50px);
   }
   to {
      transform: translate(200px, 50px);
   }
 }
 .cloud-front {
   animation: 30s cloud-move infinite alternate linear;
 }

@keyframes cloud-move-reverse {
   from {
      transform: translate(446px, 48px);
   }
   to {
      transform: translate(100px, 48px);
   }
}

.cloud-back {
   animation: 30s cloud-move-reverse infinite alternate linear;
}
